# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['src/main.py'],
    pathex=['C:\Users\ramin\projects\tt'],
    binaries=[],
    datas=[
        ('config/*', 'config'),
        ('data/*', 'data'),
        ('docs/*', 'docs'),
        ('requirements/*', 'requirements'),
        ('src/ui/templates/*', 'ui/templates'),
        ('src/ui/static/*', 'ui/static'),
        ('drivers/*', 'drivers'),
        ('monitoring/*', 'monitoring'),
    ],
    hiddenimports=[
        'asyncio',
        'uvloop',
        'aiohttp',
        'torch',
        'transformers',
        'sentence_transformers',
        'chromadb',
        'langchain',
        'openai',
        'psutil',
        'GPUtil',
        'pyaudio',
        'pyttsx3',
        'speech_recognition',
        'scikit-learn',
        'numpy',
        'pandas',
        'matplotlib',
        'seaborn',
        'cryptography',
        'redis',
        'sqlite3',
        'json',
        'yaml',
        'toml',
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='AI-System',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=True,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
    icon='assets/icon.ico' if os.path.exists('assets/icon.ico') else None,
)

coll = COLLECT(
    exe,
    a.binaries,
    a.zipfiles,
    a.datas,
    strip=False,
    upx=True,
    upx_exclude=[],
    name='AI-System',
)
