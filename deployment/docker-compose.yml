version: '3.8'

services:
  ai-system:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: ai-system-core
    restart: unless-stopped
    ports:
      - "8080:8080"  # Dashboard
      - "9090:9090"  # Metrics
    volumes:
      - ai-data:/app/data
      - ai-logs:/app/logs
      - ai-config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro  # For system monitoring
    environment:
      - ENVIRONMENT=production
      - DEBUG_MODE=false
      - DASHBOARD_PORT=8080
      - VOICE_ENABLED=true
      - SECURITY_ENABLED=true
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGING_FACE_API_KEY=${HUGGING_FACE_API_KEY}
    depends_on:
      - chromadb
      - redis
      - prometheus
    networks:
      - ai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  chromadb:
    image: chromadb/chroma:latest
    container_name: ai-system-chromadb
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - chroma-data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    networks:
      - ai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: ai-system-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-ai-system-redis}
    networks:
      - ai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: ai-system-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - ai-network

  grafana:
    image: grafana/grafana:latest
    container_name: ai-system-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    networks:
      - ai-network
    depends_on:
      - prometheus

  nginx:
    image: nginx:alpine
    container_name: ai-system-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - ai-system
      - grafana
    networks:
      - ai-network

  watchtower:
    image: containrrr/watchtower
    container_name: ai-system-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=86400  # 24 hours
      - WATCHTOWER_INCLUDE_STOPPED=true
    networks:
      - ai-network

volumes:
  ai-data:
    driver: local
  ai-logs:
    driver: local
  ai-config:
    driver: local
  chroma-data:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  nginx-logs:
    driver: local

networks:
  ai-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16